//apply plugin: 'com.android.application'
apply plugin: 'com.android.library'
android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    defaultConfig {
//        applicationId 'com.example.hellojni'
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode 1
        versionName "1.0"
        externalNativeBuild {
            cmake {
                cppFlags ""
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'),
                    'proguard-rules.pro'
        }
    }

    externalNativeBuild {
        cmake {
            path "src/main/cpp/CMakeLists.txt"
            version "3.10.2"
        }
    }
//    externalNativeBuild {
//        cmake {
//            version '3.10.2'
//            path "src/main/cpp/CMakeLists.txt"
//        }
//    }

//    flavorDimensions 'cpuArch'
//    productFlavors {
//        arm7 {
//            dimension 'cpuArch'
//            ndk {
//                abiFilter 'armeabi-v7a'
//            }
//        }
//        arm8 {
//            dimension 'cpuArch'
//            ndk {
//                abiFilters 'arm64-v8a'
//            }
//        }
//        x86 {
//            dimension 'cpuArch'
//            ndk {
//                abiFilter 'x86'
//            }
//        }
//        x86_64 {
//            dimension 'cpuArch'
//            ndk {
//                abiFilter 'x86_64'
//            }
//        }
//        universal {
//            dimension 'cpuArch'
//            // include all default ABIs. with NDK-r16,  it is:
//            //   armeabi-v7a, arm64-v8a, x86, x86_64
//        }
//    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    // implementation 'com.android.support:appcompat-v7:28.0.0'
    // implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation rootProject.ext.dependencies.appcompat
    implementation rootProject.ext.dependencies.constraintlayout
}
